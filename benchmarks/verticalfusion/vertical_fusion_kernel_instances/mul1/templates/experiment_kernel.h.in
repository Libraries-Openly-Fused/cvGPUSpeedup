/* Copyright 2023-2025 Oscar Amoros Huguet
   Copyright 2025 Albert Andaluz Gonz√°lez
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License. */
   
#ifndef MUL@N@_H
#define MUL@N@_H

#include <opencv2/cudaimgproc.hpp> // Make sure OpenCV is findable
#include <array> // For std::array

// These paths assume 'benchmarks' is a top-level directory in your source
// or in a directory added to include_directories (e.g. "src/benchmarks/...")
#include <benchmarks/verticalfusion/vertical_fusion_kernel_instances/mul1/mulOpType.cuh>
#include <benchmarks/verticalfusion/vertical_fusion_kernel_instances/mul1/realBatch.h>

void launchMul@N@(const std::array<cv::cuda::GpuMat, REAL_BATCH>& crops,
                  const cv::cuda::Stream& cv_stream,
                  const float& alpha,
                  const cv::cuda::GpuMat& d_tensor_output,
                  const cv::Size& cropSize,
                  const MulFuncType& dFunc);

#endif // MUL@N@_H