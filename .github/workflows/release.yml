name: Create Release with Submodules

on:
  push:
    tags:
      - 'Alpha-*'  # Push events to matching Alpha-*, i.e. Alpha-0.0.21

permissions:
  contents: write  # This is crucial for creating releases

jobs:
  build:
    name: Create Release with Submodules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'  # Fetch all submodules recursively
          
      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#Alpha-}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      
      - name: Create release package
        run: |
          # Create release directory with proper naming
          RELEASE_DIR="cvGPUSpeedup-Alpha-${{ env.VERSION }}"
          mkdir -p "${RELEASE_DIR}"
          
          # Copy only files that exist
          for item in include CMakeLists.txt LICENSE README.md; do
            if [ -e "$item" ]; then
              cp -r "$item" "${RELEASE_DIR}/"
            fi
          done
    
          # Copy folders only if they exist
          for dir in lib src tests; do
            if [ -d "$dir" ]; then
              cp -r "$dir" "${RELEASE_DIR}/"
            fi
          done
    
          # Copy fkl submodule files if they exist
          if [ -d "fkl" ]; then
            mkdir -p "${RELEASE_DIR}/fkl"
            cp -r fkl/* "${RELEASE_DIR}/fkl/"
          fi
    
          # Create archive
          zip -r "${RELEASE_DIR}.zip" "${RELEASE_DIR}"
          tar -czf "${RELEASE_DIR}.tar.gz" "${RELEASE_DIR}"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1  # Different action with better permissions handling
        with:
          files: |
            cvGPUSpeedup-Alpha-${{ env.VERSION }}.zip
            cvGPUSpeedup-Alpha-${{ env.VERSION }}.tar.gz
          name: cvGPUSpeedup Alpha ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
